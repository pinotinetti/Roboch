%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% University Assignment Title Page 
% LaTeX Template
% Version 1.0 (27/12/12)
%
% This template has been downloaded from:
% http://www.LaTeXTemplates.com
%
% Original author:
% WikiBooks (http://en.wikibooks.org/wiki/LaTeX/Title_Creation)
%
% License:
% CC BY-NC-SA 3.0 (http://creativecommons.org/licenses/by-nc-sa/3.0/)
% 
% Instructions for using this template:
% This title page is capable of being compiled as is. This is not useful for 
% including it in another document. To do this, you have two options:
%
% 1) Copy/paste everything between \begin{document} and \end{document} 
% starting at \begin{titlepage} and paste this into another LaTeX file where you 
% want your title page.
% OR
% 2) Remove everything outside the \begin{titlepage} and \end{titlepage} and 
% move this file to the same directory as the LaTeX file you wish to add it to. 
% Then add \input{./title_page_1.tex} to your LaTeX file where you want your
% title page.
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%\title{Title page with logo}
%----------------------------------------------------------------------------------------
%	PACKAGES AND OTHER DOCUMENT CONFIGURATIONS
%----------------------------------------------------------------------------------------

\documentclass[12pt]{article}
\usepackage[english]{babel}
\usepackage[utf8x]{inputenc}
\usepackage{amsmath}
\usepackage{graphicx}
\usepackage[colorinlistoftodos]{todonotes}
\usepackage{wrapfig}

\usepackage{amsmath}
\usepackage{algorithm}
\usepackage[noend]{algpseudocode}

\makeatletter
\def\BState{\State\hskip-\ALG@thistlm}
\makeatother

\begin{document}

\begin{titlepage}

\newcommand{\HRule}{\rule{\linewidth}{0.5mm}} % Defines a new command for the horizontal lines, change thickness here

\center % Center everything on the page
 
%----------------------------------------------------------------------------------------
%	HEADING SECTIONS
%----------------------------------------------------------------------------------------

\textsc{\small University of Bristol}\\[1.5cm] % Name of your university/college
\textsc{\Large COMSM0012 Robotics Systems PG}\\[0.5cm] % Major heading such as course name
%\textsc{\large Minor Heading}\\[0.5cm] % Minor heading such as course title

%----------------------------------------------------------------------------------------
%	TITLE SECTION
%----------------------------------------------------------------------------------------

\HRule \\[0.4cm]
{ \huge \bfseries Coursework1}\\[0.4cm] % Title of your document
\HRule \\[1.5cm]
 
%----------------------------------------------------------------------------------------
%	AUTHOR SECTION
%----------------------------------------------------------------------------------------

\begin{minipage}{0.4\textwidth}
\begin{flushleft} \large
\emph{Team members:}\\
Luis Diaz [\textsc{ld15325}]\\
Carlos Pino [\textsc{cp15437}]\\ % Your name
Suppanat (Top) Ruangdech [\textsc{}]\\
Christos Sevastopoulos [\textsc{cs15427}]\\

\end{flushleft}
\end{minipage}
~
\begin{minipage}{0.4\textwidth}
\begin{flushright} \large
\emph{Contribution:} \\
25\%\\ % each one contibution
25\%\\ % each one contibution
25\%\\ % each one contibution
25\% % each one contibution
\end{flushright}
\end{minipage}\\[2cm]

% If you don't want a supervisor, uncomment the two lines below and remove the section above
%\Large \emph{Author:}\\
%John \textsc{Smith}\\[3cm] % Your name

%----------------------------------------------------------------------------------------
%	DATE SECTION
%----------------------------------------------------------------------------------------

{\large \today}\\[5cm] % Date, change the \today to a set date if you want to be precise

%----------------------------------------------------------------------------------------
%	LOGO SECTION
%----------------------------------------------------------------------------------------

%\includegraphics{UoB.png}\hspace{2cm}%this will require the graphicx package

 
%----------------------------------------------------------------------------------------

\vfill % Fill the rest of the page with whitespace

\end{titlepage}


%\begin{abstract}
%Your abstract.
%\end{abstract}

%\section{Aims and Objectives}

%Your introduction goes here! Some examples of commonly used commands and features are listed below, to help you get started.
%
%If you have a question, please use the support box in the bottom right of the screen to get in touch. 

%\section{Motivation}
%\label{sec:examples}

%\subsection{Sections}

%Use section and subsection commands to organize your document. \LaTeX{} handles all the formatting and numbering automatically. Use ref and label commands for cross-references.

%\subsection{Comments}

%Comments can be added to the margins of the document using the \todo{Here's a comment in the margin!} todo command, as shown in the example on the right. You can also add inline comments too:
%
%\todo[inline, color=green!40]{This is an inline comment.}

%\section{Literature Review}

%Use the table and tabular commands for basic tables --- see Table~\ref{tab:widgets}, for example. You can upload a figure (JPEG, PNG or PDF) using the files menu. To include it in your document, use the includegraphics command as in the code for Figure~\ref{fig:frog} below.

% Commands to include a figure:
%\begin{figure}
%\centering
%\includegraphics[width=0.5\textwidth]{frog.jpg}
%\caption{\label{fig:frog}This is a figure caption.}
%\end{figure}
%
%\begin{table}
%\centering
%\begin{tabular}{l|r}
%Item & Quantity \\\hline
%Widgets & 42 \\
%Gadgets & 13
%\end{tabular}
%\caption{\label{tab:widgets}An example table.}
%\end{table}

%\section{Risk Register}

%\LaTeX{} is great at typesetting mathematics. Let $X_1, X_2, \ldots, X_n$ be a sequence of independent and identically distributed random variables with $\text{E}[X_i] = \mu$ and $\text{Var}[X_i] = \sigma^2 < \infty$, and let
%$$S_n = \frac{X_1 + X_2 + \cdots + X_n}{n}
%      = \frac{1}{n}\sum_{i}^{n} X_i$$
%denote their mean. Then as $n$ approaches infinity, the random variables $\sqrt{n}(S_n - \mu)$ converge in distribution to a normal $\mathcal{N}(0, \sigma^2)$.

%\section{Timeline}

%You can make lists with automatic numbering \dots
%
%\begin{enumerate}
%\item Like this,
%\item and like this.
%\end{enumerate}
%\dots or bullet points \dots
%\begin{itemize}
%\item Like this,
%\item and like this.
%\end{itemize}

%We hope you find write\LaTeX\ useful, and please let us know if you have any feedback using the help menu above.

%---------------------------------------------------
%Actual start of document after all the explanations
%---------------------------------------------------

\tableofcontents

\newpage
\section{Introduction}
It is common knowledge that navigation and localization constitute a highly important part of robotics. In this coursework, the functionality of the robot is determined by the use of an NXT Mindstorms microcontroller along with an NXT servo-motor and an Ultrasonic sensor. The movement and the control of the robot is accomplished using MATLAB in conjunction with the Mindstorms NXT toolbox. Specifically, the project consists of the simulated and the actual implementation parts respectively. 
\par
As far as the localization of the robot is concerned, the Particle filter approach 
is employed. At the next stage, the path planning procedure is going to be achieved using the A* algorithm.Since the ground is prepared, the real implementation of the robot will demonstrate the robustness of the our work.


\section{Robot Building and Design}
The building of our robot (Figure 1) was based on a custom approach which apart from two front wheels uses a roller as an additional attachment. The rationale behind the building is illustrated in the following sentences. In particular , we placed two servo-motors behind each front wheel in order to simplify the control of the robot and a third servo-motor to control the sensor and thus  prevent any possible collisions that might occur. On the other hand, the use of the roller acts as a technique to overcome the undesirable effect of friction. What is more, we had also to take under consideration the fact that the height of the arena's walls is approximately twenty centimeters and as a consequence the sensor should not be placed over that . 
\par


Furthermore, another vital advantage  of our design is the fact that we have the ability to perform measurements using the sensor that are not dependent on the robot's motion.Particularly, odometry will not be a serious concern since less actuators are involved in our endeavor. As a result , this eventually leads to less energy consumption, less  unnecessary error modeling  and to a more accurate response from the sensor.


\section{Calibration and Sensor Modeling}

As far as the calibration process is concerned, many sensor readings were taken in order to model the error. Therefore , we had the ability to compare the readings to the manual measurements taken with a metric tape. Furthermore, after placing the sensor in different orientations (using steps of 45 degrees) , we gathered some additional readings which are shown in the next table  
\par
To model the odometry, we used the Gaussian distribution. 

%Samples were taken
%Both epsilon and fi may come from a Gaussian approximation with zero mean and obtained
%from experimental data. They may also be a function of t and theta respectively.
%Note that in this case, noise during pure rotation (t=0) may only affect theta while
%noise during a pure translation (alpha=0) normally affects robotâ€™s orientation too so
%theta new= theta old + beta where beta is usually > than fi for larger distances t travelled. 

\section{Localization}
In the past decade, several localization algorithms were developed and along with the increase of the computers' performance , more probabilistic algorithms were robustly produced. Moreover, a quite common approach is the "Particle Filter" one.

\subsection{Particle Filter}
For starters, Particle Filter is a variant of the Bayes filter based on importance sampling. Its key idea concerns representing the posterior belief \( bel(x_{t}) \) by a set of random state samples drawn from this posterior.

%This part is for pseudo code inside text
\begin{algorithm}
\caption{Particle filter}\label{euclid}
\begin{algorithmic}[1]
\Procedure{Localization}{}
\State $\textit{Generate random located particles}$
%\State $i \gets \textit{patlen}$
%\BState \emph{top}:
\While {$converged = \textit{false}$}
\State $Robot \gets ultraScan$.
\State $Particles \gets ultraScan$.
\State $Score Particles$.
\State $Re sampling$.
\State $Convergence$.
\If {$\textit{converged} = \textit{true}$}
\State \textbf{goto} \emph{end}.
\EndIf
\State $Respawn$.
\State $Robot \gets move$.
\State $Particles \gets move$.
\EndWhile
\State \textbf{end}.

%\State \textbf{goto} \emph{loop}.
%\State \textbf{close};
%\State $i \gets i+\max(\textit{delta}_1(\textit{string}(i)),\textit{delta}_2(j))$.
%\State \textbf{goto} \emph{top}.
\EndProcedure
\end{algorithmic}
\end{algorithm}
Algorithm 1 depicts the pseudo code of the particle filter implemented in MATLAB for both areas (simulation and real). In the next section we are going to describe in detail the approaches that were used in every stage of the algorithm.
\subsubsection{MATLAB program}
For this part, a template program was giving to us containing the matlab object oriented class Botsim and some examples to see how this template works and to be able to adjust our localization approach to this program.
This class contains several useful functions as move, turn, set position, get position, etc.
The first step we did with this code was to make a copy of this object to split the robot with the particles, to ensure not to "cheat" in the simulation. We called this new object as ParticleSim, and added two more structures (setWeight and getWeight) to save in every particle its weighting. One of the main concerns of this program was to  develop a simulation platform before doing the real robot 
\paragraph{Random particles}
Now that we have separate class objects we started to generate the random particles inside the map using the randomPose function. After many trials the best number of initial particles for performance and speed were 400.
\paragraph{Scanning}
To be able to locate the robot inside the map we need a sensor feedback, for this task an ultrasonic sensor was supplied for the NXT brick. This sensor give us the distance in cm. We used the function ultraScan that rotates the sensor and takes reading a specified number of times with equally spaced motor angel rotation. The default was 6 but in this approach we chose 8 scans per ultraScan so we can get a better estimation of the robot's position. This ultraScan has to be made for the robot and for every particle.
\paragraph{Scoring}
Scoring is to assign some kind of score to each particle. First for each particle we calculated the difference against the robot in the 8 scans taken, but to be able to select the best orientation of the particles we used the circshift function of MATLAB that allow us to shift the particles reading vector and save the best position. After having the best position of the particles we weighted every particle using the normal distribution formula:
\begin{equation}
P(x) = \frac{1}{{\sigma \sqrt {2\pi } }}e^{{{ - \left( {x - \mu } \right)^2 } \mathord{\left/ {\vphantom {{ - \left( {x - \mu } \right)^2 } {2\sigma ^2 }}} \right. \kern-\nulldelimiterspace} {2\sigma ^2 }}}
\end{equation}
where \( x-\mu\) is the already best difference found of each particle. After weighting all the particles we normalized the results, this way the sum of all the weights is always going to be equal to 1. Is very important in this step adding the damping factor after calculating the weight, because if it is not used all the particles accumulates in one single position, killing the rest.
\paragraph{Re-sampling}
The approach taken to re-sample the particles was to save every particle weight and sort it from higher to lower. According to the normalized weighting we got how many particles should be re sampled, the more weight the more particles associated will have \(( weighting*numParticles\)).
\paragraph{Convergence}
With our particles located in the possible robot location, we chose the first 30\% of the particles that are more likely to contain the right info. From this info we got the standard deviation of the position and the angle and after many trials we found that if the standard deviation is less than 1e-12 we can stop the algorithm and return the robot position and direction.
\paragraph{Respawn}
This is a very important step for the robustness of the algorithm, if we don't respawn the particles we can get stuck in one position (local optima) never having the change to find the correct location. In our approach we are respawning 70\% of the particles in random locations.
\paragraph{Movement}
In order to accomplish the particle filter we need to move the robot in an exploratory way, giving more probability to find the correct position. All the particles must move the same way as the robot.
In our program we made the exploratory movement as follows:
\begin{itemize}
\item Turn and then move forward if the first sensor reading is more than a set threshold, if it is less just turn (80\% of the time).
\item Move forward if the first scan reading is less than a threshold, if not turn and then move (20\% of the time).
\end{itemize}
For the particles we make the same movement but we check if with the movement the particle continue inside the map, if not that particle does not move.

\section{Path Planning}
%\subsection{A*}
%\subsection{Simulation}
%\subsection{Real Robot}

\section{Real Robot Implementation}
%\subsection{Results}

\section{Challenges}
\subsection{Inaccuracy with Ultrasonic Readings}
Initially, the primary challenge lies on the perpetual improvement of the robot's speed and the precision of the sensor readings. As a consequence, many different designs were implemented until a certain level of precision and speed standards was reached.  
\par
In particular, a major challenge that needed to be overcome was the misreading of the sensor when the robot's orientation was forming an angle of 45 degrees with wall.Hence, there was a disparity between the sensor's and the particle filter readings respectively. Nevertheless, a way to tackle this was to apply a continuous (instead of a partial) motion of the sensor during which, readings were received every single degree. This was proven advantageous since a direct improvement of the localization was observed.
 
%\subsection{Design Improvement: From Rear wheel to Passive Roller}
%\subsection{Inaccuracy with Ultrasonic Readings}
\subsection{Particle Spread Method}
Primarily, a specific challenge lies on decreasing the time of convergence of the particle filter. That challenge is strongly related to the initialization of the map and the initial distribution of the particles. Our approach towards dealing with that challenge was to modify the random pattern in which the particles were spread to a more coordinated one such as a rectangular grid. Therefore, we observed a better re sampling of the particles.   
\subsection{Collision Protection during the Path Planning}
In general, once the robot is efficiently localized a path planning procedure has to be executed without further measurements.Since the localization is not always exact, a unreliable representation of the map might be deduced which could lead to non welcome collisions. However, in our approach we proposed an additional reading as a preventative way within the path planning stage. So, a clearer navigation can be realized .
%\subsection{}
\section{References}
\end{document}
